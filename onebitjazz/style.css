* {margin: 0; padding: 0; box-sizing: border-box; font-family: "Roboto", sans-serif;}

:root {--color-primary: #ed4d1b; --color-secondary: #FF9A3C; --color-black: #000; --color-white: #FFF;}

body {background: linear-gradient(90deg, #FFE7D1 0%, #FFF2E6 100%); padding: 0 1rem;}

/*------------------------------------ header ------------------------------- */

header, .hero-section, .courses-section, footer {border: var(--color-black) solid 1px; border-top: none; padding: 1.25rem;} /* aplico a mesma format do header nessas outras classes de sections (primária e secundária)*/

header img {display: block; margin: 1rem auto;}

header nav {display: grid; grid-template-columns: 1fr 1fr; margin: 1rem auto 0;}

nav a {color: var(--color-black); font-size: 1.25rem; padding: .5rem; text-decoration: none;}

header nav a:nth-child(2n-1) {text-align: right;} /* essa equation seleciona somente os números ímpares para aplicar a format, no caso do nosso site, somente os filhos 1 e 3 will be selected e a equation funcionará da seguinte forma, filho 1 (2.1-1) = 1, filho 2 (2.2-1) = 3 (já nesse momento é selecionado todos os elementos que queremos alinhar á direita.
*/

.button {background-color: var(--color-primary); border: 2px solid var(--color-black); box-shadow: 4px 4px 0 var(--color-black); color: var(--color-black); display: block; font-size: 1.25rem; padding: .75rem 1rem; max-width: 14rem; text-align: center; text-decoration: none; text-transform: uppercase;}

/* background da cor primary border black, box shadow 4px para a esquerda, 4 px para baixo e 0 blur da cor preta, uma cor das letras preta, display block para aumentar a width, padding de 0.75rem cima baixo e 1 rem laterais, max-width de 14rem e text-align center. */

/*------------------------------------ FIM header ------------------------------- */

/* ----------------------------------- hero section ----------------------------- */

.hero-section {padding-right: 0; padding-bottom: 16rem;}

.hero-section img {display: block; margin: 1.25rem 0 0 auto; max-width: 100%;}

h1 {font-size: 3rem; line-height: 105%;}

.hero-section p {font-size: 1.25rem; padding-right: 1.25rem;}

.hero-section .button {position: relative;}

.hero-section .button::after {content: ""; background: url(img/arrow-curve.svg); position: absolute;top: 5rem; right: -4rem; height: 48px; width: 132px;}

.decoration {display: block; position: relative;}

.decoration::after {content: ""; background: url(img/three-dashes.svg); height: 36px; width: 40px; position: absolute; top: -0.75rem;}
/* ----------------------------------- courses section -------------------------- */

.courses-section {padding-bottom: 8rem;}

.cards {display: flex; flex-direction: column; align-items: start; gap: 1.25rem; margin-top: -8rem;  margin-bottom: 4rem;}

/* coloco um display flex para manipular os elementos mais facilmente com o align-items "grudando" os elementos no início, gap de 1.25rem de espaço entre os elementos (eixo vertical ja que coloquei flex-direction column) margin-top negativa para invadir a hero section. */

.card {background-color: var(--color-primary); border: 2px solid var(--color-black); box-shadow: 4px 4px 0 var(--color-black); max-width: 17rem; padding:2rem 0 0 2rem;}

.card:nth-child(2n) {align-self: end; background-color: var(--color-secondary);}

/* eu aplico um flex-items start no container pai e nesses cards pares eu aplico um align self end para se diferenciarem dos outros */

.card strong {display: block; font-size: 1.5rem; margin: 1rem 0;}

.card a {display: block; margin: 3rem 0 0 auto; width: fit-content;}

/* width fit content se ajusta ao conteúdo do elemento */

h2 {font-size: 2.5rem;}


/* ---------------------------------------- rodapé --------------------------------------- */

footer {border-bottom: 0; padding: 1rem 1.25rem 4rem;}

footer nav a {display: block; padding-left: 0;}

.newsletter-form label {display: block; font-size: 1.5rem;}

.newsletter-form input {border: 2px solid var(--color-black); box-shadow: 4px 4px 0 var(--color-black); font-size: 1.5rem; padding: 0.5rem; width: 100%;}








/* responsividade */

@media screen and (min-width: 40rem) {
    header nav {display: block; text-align: center;}
    /* Aqui eu volto a nav pro display block em uma tela de 640px mínimos (display anterior era grid ) */

    .cards {flex-direction: row; flex-wrap: wrap; justify-content: center;}

    .card:nth-child(2n) {margin-top: 1rem;}
}

/* Aplico uma format que a cada par de card (2n) ele vai levemente para baixo */


@media screen and (min-width: 48rem) {
    header div {display: flex; align-items: center; justify-content: space-between;}

    header img,
    header nav,
    header .button {margin: 0;}
}

/* mudo o display para flex da nav para ocupar o espaço completo e utilizo flex-box para espaçar os elementos */

@media screen and (min-width:76rem) {
    h1, h2 {font-size: 4rem;}

    .container {display: flex; align-items: center; margin: 0 auto; max-width: 72rem;}

    .container.row-reverse {flex-direction: row-reverse;}

    .about-column {flex: 2;}

    .about-column p {font-size: 1.25rem; max-width: 16rem;}

    footer nav {flex: 1;}

    .newsletter-form {flex: 3;}

}

@media screen and (min-width: 80rem) {
    .container {max-width: 80rem;}
}




/* Utilitários */

.mt-1 {margin-top: 1rem;}

.mt-2 {margin-top: 2rem;}

.mt-1 {margin-bottom: 1rem;}

.mt-2 {margin-bottom: 2rem;}

.mx-auto {margin-left: auto; margin-right: auto;}

.text-primary {color: var(--color-primary);}

.text-center {text-align: center;}